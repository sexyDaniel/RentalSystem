@page "/rentArea/{AreaId:int}"
@using PapsCourse.Shared.Models.Area
@using Microsoft.AspNetCore.Authorization;
@inject HttpClient HttpClient
@inject PapsCourse.Client.Services.Abstract.IAccountSession Session
@attribute [Authorize]

<link href="/css/mall/rent.css" rel="stylesheet" type="text/css" />

<div class="request-container d-flex justify-content-center">
    <div class="row">
        <div class="area-info rent-container col-4 p-0 shadow">
            <div class="rent-container-title">
                Площадь <span>#@AreaId</span>
            </div>
            <img src="/images/areas/plan-1.jpg" class="area-info-image p-4" />
            <div class="area-info-title">
                Площадь
            </div>
            <div class="area-info-data my-1">
                @CurrentArea?.Square
            </div>
            <div class="area-info-title">
                Кондиционер
            </div>
            <div class="area-info-data my-1">
                @if (CurrentArea != null && CurrentArea.HasConditioner)
                {
                    <span>Есть</span>
                }
                else
                {
                    <span>нет</span>
                }
            </div>
            <div class="area-info-title">
                Туалет
            </div>
            <div class="area-info-data my-1">
                @if (CurrentArea != null && CurrentArea.HasToilet)
                {
                    <span>Есть</span>
                }
                else
                {
                    <span>нет</span>
                }
            </div>
            <div class="area-info-title">
                Кол-во входов
            </div>
            <div class="area-info-data my-1">
                @CurrentArea?.EntriesCount
            </div>
            <div class="area-info-title">
                Кол-во окон
            </div>
            <div class="area-info-data my-1">
                @CurrentArea?.WindowsCount
            </div>
            <div class="area-info-title">
                Цена
            </div>
            <div class="area-info-data my-1">
                @CurrentArea?.Price Р
            </div>
        </div>
        <div class="request-form-container rent-container col shadow ml-4 px-4">
            <div class="rent-container-title no-col-padding">
                Оформите заявку на аренду
            </div>
            <div class="request-title mt-2 mb-1">
                Магазин
            </div>
            @if (stores != null)
            {
                <select class="form-control" @bind="storeId">
                    @foreach (var store in stores)
                    {
                        <option value="@store.Id">@store.Name</option>
                    }
                </select>
            }

            <div class="request-title mt-2 mb-1">
                Категория
            </div>

            @if (categories != null)
            {
                <select class="form-control" @bind="categoryId">
                    @foreach (var category in categories)
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
                </select>
            }
            <div class="request-title mt-2 mb-1">
                Средний чек
            </div>
            <input type="text" class="request-input w-100 form-control" @bind="averageReciept" />
            <div class="request-title mt-2 mb-1">
                Сообщение (необязательно)
            </div>
            <textarea class="request-input w-100 form-control" @bind="text"></textarea>
            <button class="send-request-btn d-block ml-auto mt-3" @onclick="SendRentRequestAsync">Отправить</button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int AreaId { get; set; }

    private int storeId { get; set; }
    private int categoryId { get; set; }
    private int averageReciept { get; set; }
    private string text { get; set; }
    private AreaResponse CurrentArea { get; set; }

    private List<StoreResponse> stores;
    private List<CategoryResponse> categories;

    private async Task SendRentRequestAsync()
    {
        var request = new StatementForRent()
        {
            StoreId = storeId,
            CategoryId = categoryId,
            AverageReciept = averageReciept,
            Text = text,
            SquareId = AreaId
        };
        var response = await HttpClient.PostAsJsonAsync("api/Statement/addStatementRent", request);
        //var result = await response.Content.ReadFromJsonAsync<Response>();

        // send to the server
    }

    private async Task LoadData()
    {
        //CurrentArea = await HttpClient.GetFromJsonAsync<Area>($"api/Area/getAreaById/{AreaId}");
        //categories = await HttpClient.GetFromJsonAsync<List<Category>>($"api/Category/getCategories");
        //stores = await HttpClient.GetFromJsonAsync<List<Store>>($"api/Store/getStores/{Session.GetValue("ID")}");
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }
}
